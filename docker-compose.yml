version: '2'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - mynetwork

  kafka:
    build: ./kafka-docker
    ports:
      - "9092:9092"
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_ADVERTISED_HOST_NAME: 172.21.236.142 #192.168.99.100
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "Events:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - mynetwork

  web:
    build: .
    command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - db
      - kafka
    networks:
      - mynetwork
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    networks:
      - mynetwork
  
  faust:
    build: ./faustapp
    command: sh -c 'sleep 10 && faust -A app worker -l info'
    depends_on:
      - kafka
      - web
    environment:
      - KAFKA_HOST=kafka:9092
      - DJANGO_HOST=web:8000
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data: